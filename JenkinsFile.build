pipeline {
    agent any
    //options {
    //    ansiColor('xterm')
    //}
    stages {
        stage ('App-Build') {
            //agent { label 'windows-slave' }
            steps {
                echo 'Building application package...'
                bat 'dotnet clean'
                bat 'dotnet build'                
            }
        }
        stage ('App-Test') {
            //agent { label 'windows-slave' }
            steps {
                echo 'Performing application unit tests...'
                // TODO                
            }
        }
        stage ('App-Deploy') {
            //agent { label 'windows-slave' }
            steps {
                echo 'Cleaning local publish directory...'
                bat 'powershell.exe if(Test-Path C:\\temp) {Remove-Item -path C:\\temp\\* -recurse -force}'
                echo 'Publishing application package locally...'
                bat 'dotnet publish -c Release -o C:\\temp\\publish'
                echo 'Compressing application package locally...'
                bat 'powershell.exe Compress-Archive C:\\temp\\publish\\ C:\\temp\\deploy_pkg.zip'                
                echo 'Deploying application package to GCS bucket...'                
                bat 'gsutil cp C:\\temp\\deploy_pkg.zip gs://artifacts-sab-dev-sand-shs-temp-9341-windows-sample-app/deploy_pkg.zip'
                echo 'Application package uploaded to artifact repo successfully.'                
            }
        }
        stage ('Image-Build') {
            //agent { label 'windows-slave' }
            steps {
                echo 'Starting Packer image build...'
                // TODO
                echo 'Packer image build completed successfully.'
            }
        }
        stage ('Infra-Deploy') {
            //agent { label 'windows-slave' }
            steps {
                echo 'Starting Terraform infrastructure deployment...'
                // TODO
                echo 'Terraform infrastructure deployment completed successfully.'
            }
        }
    }
}